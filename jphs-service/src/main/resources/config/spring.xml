<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"	
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
            http://www.springframework.org/schema/mvc   
            http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd   
            http://www.springframework.org/schema/context   
            http://www.springframework.org/schema/context/spring-context-3.0.xsd   
            http://www.springframework.org/schema/aop   
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
            http://www.springframework.org/schema/tx   
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://code.alibabatech.com/schema/dubbo
			classpath:schema/dubbo.xsd ">


	<context:component-scan base-package="com.jinpaihushi" />
	<context:property-placeholder location="classpath:config/*.properties" />
	<!-- 默认的注解映射的支持 -->
	<mvc:annotation-driven />
	<context:annotation-config />
	<!-- 数据源配置, 数据库连接池 -->  
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${pool.maxActive}" />
		<property name="maxIdle" value="${pool.maxIdle}" />
		<property name="minEvictableIdleTimeMillis" value="${pool.minEvictableIdleTimeMillis}" />
		<property name="timeBetweenEvictionRunsMillis" value="${pool.timeBetweenEvictionRunsMillis}" />
		<property name="connectionInitSqls" value="set names utf8mb4;"/>
		<property name="validationQuery" value="SELECT NOW() FROM DUAL"/>
	</bean>
	
	<!-- Mybatis配置 --> 
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/spring-mybatis.xml" />
		<property name="mapperLocations" value="classpath*:com/jinpaihushi/jphs/**/dao/*.xml" />
	</bean>
	 <!-- 扫描basePackage下所有以 @MyBatisDao注解的接口注解的接口 -->  
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.jinpaihushi.jphs.**.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	 <!-- 配置SQLSession模板 -->  
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">  
        <constructor-arg index="0" ref="sqlSessionFactory" />  
    </bean>
	<!-- 声明式事务管理 --> 
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="get*" read-only="true"  propagation="SUPPORTS"/>  
            <tx:method name="find*" read-only="true" propagation="SUPPORTS"/>  
            <tx:method name="select*" read-only="true" propagation="SUPPORTS"/>  
            <tx:method name="query*" read-only="true" propagation="SUPPORTS"/>  
            <tx:method name="list*" read-only="true" propagation="SUPPORTS"/>  
            <tx:method name="count*" read-only="true" propagation="SUPPORTS"/>  
            <tx:method name="load*" read-only="true" propagation="SUPPORTS"/>  
            <tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />  
        </tx:attributes>  
    </tx:advice>  
      
    <aop:config>  
        <aop:pointcut id="transactionPointcut" expression="@annotation(org.springframework.transaction.annotation.Transactional)"/>  
        <aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPointcut"/>  
    </aop:config>  
      
    <!-- 使用annotation注解方式配置事务 -->  
    <tx:annotation-driven transaction-manager="transactionManager" />  
	<import resource="dubbo.xml"/>
	
</beans>   